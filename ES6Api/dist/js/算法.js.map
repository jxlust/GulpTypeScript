{"version":3,"sources":["算法.js"],"names":["getTwoNumSum","arr","target","obj","newLists","i","need","push","firstIndex","value1","triangle","index","value","console","log","diverSort","length","midValue","Math","floor","midIndex","leftArr","rightArr","midArr","concat","diverArr"],"mappings":"aAAA,SAASA,aAAaC,EAAKC,GACvB,IAAIC,EAAM,GADdC,EAASJ,GACL,IAAIG,IAAAA,KAAJF,EAAA,CACIG,IAAAA,EAAWF,EAAfD,EAAAI,GACKF,EAALG,IAEQH,EAAJI,KAAe,CACXC,WAAAH,EACAD,OAASG,EAAKF,GACVG,UAAAA,EADUF,GAEVG,OAAQR,IAFEE,EAAAF,EAAdI,IAAAA,EAOJF,OAAAA,EAGP,IAAAF,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACDC,OAAA,GAUA,SAASQ,SAASC,GAKVC,OALR,GAAAD,GAAyB,GAAPA,EACVC,EAEQF,SAARC,EAAA,GAAAD,SAAAC,EAAA,GAZRE,QAAIZ,IAAM,KAAAD,aAAAC,IAA0BC,SAiBnC,IAAA,IAAAG,EAAA,EAAAA,EAAA,GAAAA,IACDQ,QAAAC,IAAA,KAAAJ,SAAAL,IAOA,SAASU,UAAUd,GACf,GAAGA,EAAIe,QAAU,EADrB,OAASD,EAED,IACHE,EAAAhB,EADGiB,KAAAC,MAAAlB,EAAAe,OAAA,IAEAI,EAAAA,GACAH,EAAWhB,GACXoB,EAAAA,GACJR,QAAIS,IAAAA,IAAWL,GACf,IAAIM,IAAAA,EAAS,EAAblB,EAAAJ,EAAAe,OAAAX,IACAQ,EAAAR,GAAAY,EAEOhB,EAAAM,KAASU,EAAAA,IACRhB,EAAAI,GAAAY,EADJK,EAGSrB,KAAAA,EAASgB,IAAZM,EAGDhB,KAAAU,GAGJ,OAAAF,UAAAM,GAAAG,OAAAD,EAAAR,UAAAO,IAGR,IAAAG,SAAA,CAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACDZ,QAAAC,IAAA,WAAAC,UAAAU","file":"算法.js","sourcesContent":["function getTwoNumSum(arr, target) {\r\n    let obj = {};\r\n    let newLists = [];\r\n    for (let i in arr) {\r\n        let need = target - arr[i];\r\n        if (obj[need]) {\r\n            //如果存在\r\n            newLists.push({\r\n                firstIndex: i,\r\n                value1: arr[i],\r\n                nextIndex: obj[need],\r\n                value2: need\r\n            });\r\n        }\r\n        obj[arr[i]] = i;\r\n    }\r\n    return newLists;\r\n}\r\n//例子\r\nlet arr = [1, 8, 2, 43, 8, 2, 9, 4, 3, 5, 4, 5];\r\nlet target = 10;\r\nconsole.log('结果', getTwoNumSum(arr, target));\r\n\r\n/**\r\n * 递归\r\n * arr[0] = 1;\r\n * arr[i+1] = arr[i]+arr[i-1];\r\n */\r\nfunction triangle(index) {\r\n    let value;\r\n    if (index == 0 || index == 1) {\r\n        value = 1;\r\n    } else {\r\n        value = triangle(index - 1) + triangle(index - 2);\r\n    }\r\n    return value;\r\n}\r\n//test\r\nfor (let i = 0; i < 10; i++) {\r\n    console.log('结果', triangle(i));\r\n}\r\n/**\r\n * 二分排序插入排序的一种\r\n */\r\nfunction diverSort(arr) {\r\n    if(arr.length <= 1){\r\n        return arr;\r\n    }\r\n    let midIndex = Math.floor(arr.length / 2);\r\n    let midValue = arr[midIndex];\r\n    let leftArr = [];\r\n    let rightArr = [];\r\n    let midArr = [];\r\n    console.log('m',midValue);\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if(arr[i] < midValue){\r\n            //小于中间值的放左边\r\n            leftArr.push(arr[i]);\r\n        }else if(arr[i] > midValue){\r\n            //大于中间值的放右边\r\n            rightArr.push(arr[i]);\r\n        }else{\r\n            //等于\r\n            midArr.push(midValue);\r\n        }\r\n    }\r\n    return (diverSort(leftArr)).concat(midArr,diverSort(rightArr));\r\n}\r\n//test\r\nlet diverArr = [23,22,90,22,123,45,99,43,44,34,33,54,43];\r\nconsole.log('diverArr',diverSort(diverArr));"]}